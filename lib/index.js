// Generated by CoffeeScript 1.9.3
(function() {
  var argv, async, copyObjects, db, fs, gfs, git, i, len, mongo, pack, ref, server, tmpdir, yargs;

  require('shelljs/global');

  yargs = require('yargs');

  async = require('async');

  mongo = require('mongodb');

  gfs = require('gridfs-locking-stream');

  fs = require('fs');

  argv = {};

  git = '';

  db = null;

  yargs.usage('\nUsage: $0 [options]\n').example('', '\nSomething...')["default"]('host', 'localhost').describe('host', 'The domain name or IP address of the mongodb host to connect with')["default"]('port', 3001).describe('port', 'The mongodb server port number to connect with')["default"]('db', 'meteor').describe('db', 'The mongodb database to use')["default"]('gridfs', 'gridfs').describe('gridfs', 'The name of the gridfs bucket to use')["default"]('git', 'git').describe('git', 'path to the git executable to use').alias('g', 'git').describe('name', 'name of repository in gridfs store')["default"]('name', 'repo').alias('n', 'name').boolean('h').alias('h', 'help').wrap(null).version((function() {
    return require('../package').version;
  }));

  argv = yargs.parse(process.argv);

  console.dir(argv);

  if (argv.h) {
    yargs.showHelp();
    exit(1);
  }

  if (!(git = which(argv.git))) {
    console.error('git command not found');
    exit(1);
  }

  if (ls('.git').indexOf('objects') === -1) {
    console.error('Not a valid git repo!');
    exit(1);
  }

  console.log("About to detect packs");

  if (ls('.git/objects/pack/pack-*.pack').length > 0) {
    console.log("Packs detected");
    tmpdir = Math.floor(1000000000000 * Math.random()).toString(36);
    mkdir(tmpdir);
    mv('.git/objects/pack/*', tmpdir + "/");
    ref = ls(tmpdir + "/pack-*.pack");
    for (i = 0, len = ref.length; i < len; i++) {
      pack = ref[i];
      exec("git unpack-objects < " + pack);
    }
    rm('-rf', tmpdir);
  }

  server = new mongo.Server(argv.host, argv.port);

  db = new mongo.Db(argv.db, server, {
    w: 1
  });

  db.open(function(err) {
    if (err) {
      console.error("Couldn't open database connection, " + err);
    }
    console.log("Connected to mongo!", db);
    return db.close(function(err) {
      if (err) {
        console.error("Couldn't close database connection, " + err);
      }
      return console.log("Disconnected from mongo!", db);
    });
  });

  copyObjects = function() {
    return console.log("Copying Objects!");
  };

}).call(this);
