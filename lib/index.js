// Generated by CoffeeScript 1.9.3
(function() {
  var argv, async, yargs;

  require('shelljs/make');

  yargs = require('yargs');

  async = require('async');

  argv = {};

  target.all = function(args) {
    target.parseArgs(args);
    target.verifyRepo();
    return target.unpackRepo();
  };

  target.parseArgs = function(args) {
    if (args == null) {
      args = [];
    }
    argv = yargs.parse(args);
    console.dir(argv);
    if (argv.h) {
      yargs.showHelp();
      return exit(1);
    }
  };

  target.verifyRepo = function(args) {
    return target.parseArgs(args);
  };

  target.unpackRepo = function(args) {
    return target.parseArgs(args);
  };

  yargs.usage('\nUsage: $0 [target] [-- [] [] [] ...]\n\nOutput:\n').example('', '\nSomething...')["default"]('host', '127.0.0.1').describe('host', 'The domain name or IP address of the host to connect with')["default"]('port', 3000).describe('port', 'The server port number to connect with')["default"]('env', 'METEOR_TOKEN').describe('env', 'The environment variable to check for a valid token')["default"]('method', 'account').describe('method', 'The login method: currently "email", "username", "account" or "token"')["default"]('retry', 5).describe('retry', 'Number of times to retry login before giving up').describe('ssl', 'Use an SSL encrypted connection to connect with the host').boolean('ssl')["default"]('ssl', false).describe('plaintext', 'For Meteor servers older than v0.8.2, fallback to sending the password as plaintext')["default"]('plaintext', false).boolean('plaintext').boolean('h').alias('h', 'help').wrap(null).version((function() {
    return require('../package').version;
  }));

}).call(this);
